kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ mkdir vagrant-files
$ cd vagrant-files
$ mkdir centos7
$ mkdir ubuntu18
$ cd centos7
$ vagrant init geerlingguy/centos7


kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'geerlingguy/centos7' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'geerlingguy/centos7'
    default: URL: https://vagrantcloud.com/geerlingguy/centos7
==> default: Adding box 'geerlingguy/centos7' (v1.2.26) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/geerlingguy/boxes/centos7/versions/1.2.26/providers/virtualbox.box
    default:
==> default: Successfully added box 'geerlingguy/centos7' (v1.2.26) for 'virtualbox'!
==> default: Importing base box 'geerlingguy/centos7'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'geerlingguy/centos7' version '1.2.26' is up to date...
==> default: Setting the name of the VM: centos7_default_1669228330201_49044
Vagrant is currently configured to create VirtualBox synced folders with
the `SharedFoldersEnableSymlinksCreate` option enabled. If the Vagrant
guest is not trusted, you may want to disable this option. For more
information on this option, please refer to the VirtualBox manual:

  https://www.virtualbox.org/manual/ch04.html#sharedfolders

This option can be disabled globally with an environment variable:

  VAGRANT_DISABLE_VBOXSYMLINKCREATE=1

or on a per folder basis within the Vagrantfile:

  config.vm.synced_folder '/host/path', '/guest/path', SharedFoldersEnableSymlinksCreate: false
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/kittu/vagrant-files/centos7

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vagrant ssh
[vagrant@localhost ~]$ clear
[vagrant@localhost ~]$ exit
logout

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vgrant halt
bash: vgrant: command not found

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vagrant halt
==> default: Attempting graceful shutdown of VM...

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7



kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ cd ../ubuntu18/

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ vagrant init ubuntu/bionic64
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ ls
Vagrantfile

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ cat Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$


kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'ubuntu/bionic64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'ubuntu/bionic64'
    default: URL: https://vagrantcloud.com/ubuntu/bionic64
==> default: Adding box 'ubuntu/bionic64' (v20221117.0.0) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/ubuntu/boxes/bionic64/versions/20221117.0.0/providers/virtualbox.box
Download redirected to host: cloud-images.ubuntu.com
    default:
==> default: Successfully added box 'ubuntu/bionic64' (v20221117.0.0) for 'virtualbox'!
==> default: Importing base box 'ubuntu/bionic64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/bionic64' version '20221117.0.0' is up to date...
==> default: Setting the name of the VM: ubuntu18_default_1669229307772_9267
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 5.2.42
    default: VirtualBox Version: 6.1
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/kittu/vagrant-files/ubuntu18

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ vagrant ssh
Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-197-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Wed Nov 23 18:49:52 UTC 2022

  System load:  0.38              Processes:             101
  Usage of /:   2.9% of 38.70GB   Users logged in:       0
  Memory usage: 13%               IP address for enp0s3: 10.0.2.15
  Swap usage:   0%


0 updates can be applied immediately.

New release '20.04.5 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


vagrant@ubuntu-bionic:~$

vagrant@ubuntu-bionic:~$ exit
logout

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ vagrant halt
==> default: Attempting graceful shutdown of VM...
tcsetattr: Input/output error
Connection to 127.0.0.1 closed by remote host.

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$ vagrant destroy
    default: Are you sure you want to destroy the 'default' VM? [y/N] y
==> default: Destroying VM and associated drives...

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/ubuntu18
$

if vagrant box already exist. if we issue vagrant up command, it will start the existing stopped vagrant box.
we can also  make use of 'vagrant reload' too.

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'geerlingguy/centos7' version '1.2.26' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/kittu/vagrant-files/centos7
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7
$ vagrant reload
==> default: Attempting graceful shutdown of VM...
==> default: Checking if box 'geerlingguy/centos7' version '1.2.26' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/kittu/vagrant-files/centos7
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.

kittu@DESKTOP-S4I5703 MINGW64 ~/vagrant-files/centos7




